import glob
import json
from tabulate import tabulate


def generate_mermaid_chart(data):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Mermaid-–¥–∏–∞–≥—Ä–∞–º–º—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown"""
    chart = "```mermaid\npie\n    title –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n"
    for category, tools in data['categories'].items():
        chart += f'    "{category}" : {len(tools)}\n'
    return chart + "```"


def main():
    with open("techstack.md", "w") as f:
        # –°—Ç–∞—Ç–∏—á–Ω–∞—è —á–∞—Å—Ç—å
        f.write("""# üõ† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫

    > –≠—Ç–æ—Ç —Ñ–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è. –†—É—á–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω—ã!

    ## –û–±—â–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã
    - –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
    - –°—Ç–µ–∫ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ
    - –ö—Ä–∏—Ç–µ—Ä–∏–∏ –≤—ã–±–æ—Ä–∞: –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è, —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
    <br><br>
    ### –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫ (–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ):
    - –ù–æ—Ç–∞—Ü–∏–∏: BPMN 2.0, UML (Use Case, Sequence), C4 Model
    - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: –ì–û–°–¢ 34, –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
    - REST API: Swagger/OpenAPI, curl/requests —Ç–µ—Å—Ç—ã
    - –Ø–∑—ã–∫: Markdown + HTML + CSS

    ## –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:\n\n""")

    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö
    tech_data = {
        'categories': {
            '–ê–Ω–∞–ª–∏–∑': [],
            '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏': [],
            '–î–∞–Ω–Ω—ã–µ': [],
            '–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': []
        }
    }
    table_data = []

    # –®–∞–≥ 1: –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ _techstack.md –≤ –ø–æ–¥–ø–∞–ø–∫–∞—Ö Cases
    for file in glob.glob("Cases/**/_techstack.md", recursive=True):
        with open(file) as f:
            # –®–∞–≥ 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ JSON-–¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
            raw_content = f.read().split('```json')[1].split('```')[0].strip()
            case_data = json.loads(raw_content)

            # –®–∞–≥ 3: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
            row = {
                '–ö–µ–π—Å': f"[{file.split('/')[1]}]({file.replace('_techstack.md', '')})",
                '–ê–Ω–∞–ª–∏–∑': ', '.join(case_data['analysis']),
                '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏': ', '.join(case_data['integration']),
                '–î–∞–Ω–Ω—ã–µ': ', '.join(case_data['data']),
                '–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': ', '.join(case_data['docs'])
            }
            table_data.append(row)

            # –®–∞–≥ 4: –ê–≥—Ä–µ–≥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
            for category in tech_data['categories']:
                tech_data['categories'][category].extend(case_data[category.lower()])

    # –®–∞–≥ 5: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    with open("techstack.md", "w") as f:
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        f.write("# üõ† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫\n\n")

        # –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç GitHub Markdown)
        f.write(tabulate(table_data, headers="keys", tablefmt="github"))

        # –î–æ–±–∞–≤–ª—è–µ–º Mermaid-–¥–∏–∞–≥—Ä–∞–º–º—É
        f.write("\n\n" + generate_mermaid_chart(tech_data))


if __name__ == "__main__":
    main()