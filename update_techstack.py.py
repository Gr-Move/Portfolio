import glob
import json
from tabulate import tabulate
import base64

def generate_mermaid_chart(data):
    chart = "```mermaid\npie\n    title –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n"
    for category, tools in data['categories'].items():
        chart += f'    "{category}" : {len(tools)}\n'
    return chart + "```"

def main():
    tech_data = {'categories': {'–ê–Ω–∞–ª–∏–∑': [], '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏': [], '–î–∞–Ω–Ω—ã–µ': [], '–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': []}}
    table_data = []

    for file in glob.glob("Cases/**/_techstack.md", recursive=True):
        with open(file) as f:
            raw_content = f.read().split('```json')[1].split('```')[0].strip()
            case_data = json.loads(raw_content)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
            row = {
                '–ö–µ–π—Å': f"[{file.split('/')[1]}]({file.replace('_techstack.md', '')})",
                '–ê–Ω–∞–ª–∏–∑': ', '.join(case_data['analysis']),
                '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏': ', '.join(case_data['integration']),
                '–î–∞–Ω–Ω—ã–µ': ', '.join(case_data['data']),
                '–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': ', '.join(case_data['docs'])
            }
            table_data.append(row)
            
            # –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
            for category in tech_data['categories']:
                tech_data['categories'][category].extend(case_data[category.lower()])

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞
    with open("techstack.md", "w") as f:
        f.write("# üõ† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫\n\n")
        f.write(tabulate(table_data, headers="keys", tablefmt="github"))
        f.write("\n\n" + generate_mermaid_chart(tech_data))

if __name__ == "__main__":
    main()